<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.stone.ripple.dao.zhima.AppZhimaManageDoMapper">
  <resultMap id="BaseResultMap" type="com.stone.ripple.dal.pojo.zhima.AppZhimaManageDo">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="app_key" jdbcType="VARCHAR" property="appKey" />
    <result column="app_id" jdbcType="VARCHAR" property="appId" />
    <result column="private_zhima_key" jdbcType="VARCHAR" property="privateZhimaKey" />
    <result column="public_zhima_key" jdbcType="VARCHAR" property="publicZhimaKey" />
    <result column="env" jdbcType="VARCHAR" property="env" />
    <result column="app_name" jdbcType="VARCHAR" property="appName" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, app_key, app_id, private_zhima_key, public_zhima_key, env, app_name
  </sql>
  <select id="selectByExample" parameterType="com.stone.ripple.dal.pojo.zhima.AppZhimaManageDoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from app_zhima_manage
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from app_zhima_manage
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from app_zhima_manage
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.stone.ripple.dal.pojo.zhima.AppZhimaManageDoExample">
    delete from app_zhima_manage
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.stone.ripple.dal.pojo.zhima.AppZhimaManageDo">
    insert into app_zhima_manage (id, app_key, app_id, 
      private_zhima_key, public_zhima_key, env, 
      app_name)
    values (#{id,jdbcType=INTEGER}, #{appKey,jdbcType=VARCHAR}, #{appId,jdbcType=VARCHAR}, 
      #{privateZhimaKey,jdbcType=VARCHAR}, #{publicZhimaKey,jdbcType=VARCHAR}, #{env,jdbcType=VARCHAR}, 
      #{appName,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.stone.ripple.dal.pojo.zhima.AppZhimaManageDo">
    insert into app_zhima_manage
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="appKey != null">
        app_key,
      </if>
      <if test="appId != null">
        app_id,
      </if>
      <if test="privateZhimaKey != null">
        private_zhima_key,
      </if>
      <if test="publicZhimaKey != null">
        public_zhima_key,
      </if>
      <if test="env != null">
        env,
      </if>
      <if test="appName != null">
        app_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="appKey != null">
        #{appKey,jdbcType=VARCHAR},
      </if>
      <if test="appId != null">
        #{appId,jdbcType=VARCHAR},
      </if>
      <if test="privateZhimaKey != null">
        #{privateZhimaKey,jdbcType=VARCHAR},
      </if>
      <if test="publicZhimaKey != null">
        #{publicZhimaKey,jdbcType=VARCHAR},
      </if>
      <if test="env != null">
        #{env,jdbcType=VARCHAR},
      </if>
      <if test="appName != null">
        #{appName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.stone.ripple.dal.pojo.zhima.AppZhimaManageDoExample" resultType="java.lang.Long">
    select count(*) from app_zhima_manage
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update app_zhima_manage
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.appKey != null">
        app_key = #{record.appKey,jdbcType=VARCHAR},
      </if>
      <if test="record.appId != null">
        app_id = #{record.appId,jdbcType=VARCHAR},
      </if>
      <if test="record.privateZhimaKey != null">
        private_zhima_key = #{record.privateZhimaKey,jdbcType=VARCHAR},
      </if>
      <if test="record.publicZhimaKey != null">
        public_zhima_key = #{record.publicZhimaKey,jdbcType=VARCHAR},
      </if>
      <if test="record.env != null">
        env = #{record.env,jdbcType=VARCHAR},
      </if>
      <if test="record.appName != null">
        app_name = #{record.appName,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update app_zhima_manage
    set id = #{record.id,jdbcType=INTEGER},
      app_key = #{record.appKey,jdbcType=VARCHAR},
      app_id = #{record.appId,jdbcType=VARCHAR},
      private_zhima_key = #{record.privateZhimaKey,jdbcType=VARCHAR},
      public_zhima_key = #{record.publicZhimaKey,jdbcType=VARCHAR},
      env = #{record.env,jdbcType=VARCHAR},
      app_name = #{record.appName,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.stone.ripple.dal.pojo.zhima.AppZhimaManageDo">
    update app_zhima_manage
    <set>
      <if test="appKey != null">
        app_key = #{appKey,jdbcType=VARCHAR},
      </if>
      <if test="appId != null">
        app_id = #{appId,jdbcType=VARCHAR},
      </if>
      <if test="privateZhimaKey != null">
        private_zhima_key = #{privateZhimaKey,jdbcType=VARCHAR},
      </if>
      <if test="publicZhimaKey != null">
        public_zhima_key = #{publicZhimaKey,jdbcType=VARCHAR},
      </if>
      <if test="env != null">
        env = #{env,jdbcType=VARCHAR},
      </if>
      <if test="appName != null">
        app_name = #{appName,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.stone.ripple.dal.pojo.zhima.AppZhimaManageDo">
    update app_zhima_manage
    set app_key = #{appKey,jdbcType=VARCHAR},
      app_id = #{appId,jdbcType=VARCHAR},
      private_zhima_key = #{privateZhimaKey,jdbcType=VARCHAR},
      public_zhima_key = #{publicZhimaKey,jdbcType=VARCHAR},
      env = #{env,jdbcType=VARCHAR},
      app_name = #{appName,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>